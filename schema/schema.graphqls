scalar Time

type Post {
  id: Int!
  title: String!
  user: String!
  content: String!
  commentsAllowed: Boolean!
  createdAt: Time!
  comments(limit: Int, offset: Int): [Comment!]
}

type Comment {
  id: Int!
  user: String!
  postID: Int!
  parentID: Int
  text: String!
  createdAt: Time!
  replies(limit: Int, offset: Int): [Comment!]
}

type Query {
  posts(limit: Int!, offset: Int!): [Post!]!
  post(id: Int!): Post
  comments(postID: Int!, limit: Int, offset: Int): [Comment!]!
  replies(commentID: Int!, limit: Int, offset: Int): [Comment!]!
}

input NewPost {
  user: String!
  title: String!
  content: String!
  commentsAllowed: Boolean
}

input NewComment {
  postID: Int!
  parentID: Int
  user: String!
  text: String!
}

type Mutation {
  createPost(input: NewPost!): Post!
  closeCommentsPost(user: String!, postID: Int!, commentsAllowed: Boolean!): Post!
  createComment(input: NewComment!): Comment!
}

type Subscription {
  commentAdded(postID: Int!): Comment!
}